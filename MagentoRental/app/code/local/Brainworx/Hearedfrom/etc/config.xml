<?xml version="1.0"?>
<config>
	<modules>
		<Brainworx_Hearedfrom>
			<version>0.1.4</version>    <!-- Version number of your module -->
		</Brainworx_Hearedfrom>
	</modules>
	<global>
		<models>
			<hearedfrom>
				<class>Brainworx_Hearedfrom_Model</class>
				<resourceModel>hearedfrom_resource</resourceModel>
			</hearedfrom>
			<hearedfrom_resource>
				<class>Brainworx_Hearedfrom_Model_Resource</class>
				<entities>
					<salesCommission>
						<table>hearedfrom_salescommission</table>
					</salesCommission>
					<salesForce>
						<table>hearedfrom_salesforce</table>
					</salesForce>
					<salesSeller>
						<table>hearedfrom_salesseller</table>
					</salesSeller>
				</entities>
			</hearedfrom_resource>

			<checkout>
				<rewrite>
					<type_onepage>Brainworx_Hearedfrom_Model_Type_Onepage</type_onepage>
				</rewrite>
			</checkout>

			<brainworxadminthemecontroller>
				<class>Brainworx_Hearedfrom_Controller</class>
			</brainworxadminthemecontroller>

		</models>

		<helpers>
			<hearedfrom>
				<class>Brainworx_Hearedfrom_Helper</class>
			</hearedfrom>
		</helpers>

		<blocks>
			<checkout>
				<rewrite>
					<onepage>Brainworx_Hearedfrom_Block_Onepage</onepage>
				</rewrite>
			</checkout>

			<hearedfrom>
				<class>Brainworx_Hearedfrom_Block</class>
			</hearedfrom>

			<hearedfromonepage>
				<class>Brainworx_Hearedfrom_Block_Onepage</class>
			</hearedfromonepage>
		</blocks>

		<!-- Here we modify the checkout to our custom one -->
		<!-- This rewrite rule could be added to the database instead -->
		<rewrite>
			<!-- This is an identifier for your rewrite that should be unique -->
			<!-- THIS IS THE CLASSNAME IN YOUR OWN CONTROLLER -->
			<brainworx_hearedfrom_onepage>
				<from><![CDATA[#^/checkout/onepage/#]]></from>
				<!-- - mymodule matches the router frontname below - matches the path 
					to your controller Considering the router below, "/customonepage/index/" 
					will be "translated" to "app/code/local/Brainworx/Hearedfrom/controllers/Checkout/OnepageController.php" -->
				<to>/hearedfrom/onepage/</to>
			</brainworx_hearedfrom_onepage>
		</rewrite>
		<!-- <resources> <hearedfrom_setup> <setup> <module>Brainworx_Hearedfrom</module> 
			<class>Mage_Catalog_Model_Resource_Eav_Mysql4_Setup</class> </setup> <connection> 
			<use>core_setup</use> </connection> </hearedfrom_setup> </resources> -->
		<resources>
			<hearedfrom_setup>
				<setup>
					<module>Brainworx_Hearedfrom</module>
					<!-- for EAV attributes: Mage_Eav_Model_Entity_Setup -->
					<!-- for normal create tabel: Brainworx_Hearedfrom_Model_Resource_Setup -->
					<!-- for product related stuff - visible on front: Mage_Catalog_Model_Resource_Setup 
						or for older Mage_Catalog_Model_Resource_Eav_Mysql4_Setup -->
					<class>Brainworx_Hearedfrom_Model_Resource_Setup</class>
				</setup>
			</hearedfrom_setup>
			<!-- <hearedfrom_setup_EAV> <setup> <module>Brainworx_Hearedfrom</module> 
				<class>Mage_Catalog_Model_Resource_Setup</class> </setup> </hearedfrom_setup_EAV> -->
		</resources>

		<events>
			<!-- START Adds the Admin theme switcher, enables to avoid modify admin 
				themes -->
			<adminhtml_controller_action_predispatch_start>
				<observers>
					<brainworx_themeoverride_observer>
						<type>singleton</type>
						<!-- brainworxadminthemecontroller/observer -->
						<class>Brainworx_Hearedfrom_Controller_Observer</class>
						<method>overrideTheme</method>
					</brainworx_themeoverride_observer>
				</observers>
			</adminhtml_controller_action_predispatch_start>
		 <!-- The code of the event we want to observe -->
             <sales_order_invoice_register>
                <!-- Defining an observer for this event -->
                <observers>
                    <!--
                        Unique identifier within the
                        sales_order_place_after node.
                        By convention, we write the module's
                        name in lowercase.
                    -->
                    <hooksystem_invoice>
                        <!-- The model to be instantiated: 
                        maps to 
                        Model class as found in config <model> 
                        brainworx_rental/observer - geeft include(Mage/Brainworx/Hearedfrom/Model/Observer.php):
                        hearedfrom/observer - geeft correct mapping
                        -->
                        <class>hearedfrom/observer</class> 
                        <!-- The method of the class to be called -->
                        <method>hookToInvoiceEvent</method>
                        <!-- The type of class to instantiate -->
                        <type>singleton</type>
                    </hooksystem_invoice>
                </observers>
            </sales_order_invoice_register>
		</events>

	</global>
	<frontend>
		<!-- setup the url path to our new module -->
		<routers>
			<brainworx_hearedfrom>
				<use>standard</use>
				<args>
					<module>Brainworx_Hearedfrom</module>
					<frontName>hearedfrom</frontName>
				</args>
			</brainworx_hearedfrom>
		</routers>

		<events>
			<!-- START Custom added: Hooks into order save event -->
			<checkout_onepage_controller_success_action>
				<observers>
					<hooksystem_order_success>
						<type>singleton</type>
						<class>hearedfrom/observer</class>
						<method>hookToOrderSaveEvent</method>
					</hooksystem_order_success>
				</observers>
			</checkout_onepage_controller_success_action>
		</events>
		<!-- add layout of the frontend component -->
		<layout>
			<updates>
				<hearedfrom>
					<file>hearedfrom.xml</file>
				</hearedfrom>
			</updates>
		</layout>
	</frontend>
</config>